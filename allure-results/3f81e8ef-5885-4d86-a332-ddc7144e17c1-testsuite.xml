<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1510387068313" stop="1510387122239">
  <name>test.test_add_group</name>
  <labels/>
  <test-cases>
    <test-case start="1510387068313" status="passed" stop="1510387089043">
      <name>test_add_group[None:::]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387089044" status="passed" stop="1510387091690">
      <name>test_add_group[None:name^F7GO`Y9:header&amp;7Ui UG E:footer XV |=]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387091691" status="passed" stop="1510387094318">
      <name>test_add_group[None:namezG(OT:headerSIlS g nY4$rJ:footer..) .Y5#pX~]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387094320" status="passed" stop="1510387098187">
      <name>test_add_group[None:name3iH$QLbIj:headerGcB4y!J!Db&amp;Cjn:footerkqO-VV ]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387098190" status="failed" stop="1510387103521">
      <name>test_add_group[None:name &lt;:headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si\\ W&amp;Y 8XS0+,]</name>
      <failure>
        <message>AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
  At index 52 diff: None:name &lt;:headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si\ W&amp;Y 8XS0+, != 155:name :headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si W&amp;Y 8XS0+,
  Use -v to get the full diff</message>
        <stack-trace>app = &lt;fixture.application.Application object at 0x03F42150&gt;
db = &lt;fixture.db.DbFixture object at 0x03F47430&gt;
json_groups = None:name &lt;:headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si\ W&amp;Y 8XS0+,
check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
        group = json_groups
        old_groups = db.get_group_list()
        app.group.create(group)
        new_groups = db.get_group_list()
        old_groups.append(group)
&gt;       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E       assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
E         At index 52 diff: None:name &lt;:headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si\ W&amp;Y 8XS0+, != 155:name :headerFQ*W&gt;`rL4ViF.O:footerG &lt;Si W&amp;Y 8XS0+,
E         Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387103526" status="passed" stop="1510387107316">
      <name>test_add_group[None:namek8mrPR%:header e:O,p4 lh0 :footerI 0xe1nut=U[0awFqh]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387107318" status="failed" stop="1510387110514">
      <name>test_add_group[None:name&lt;". ~S :headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK]</name>
      <failure>
        <message>AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
  At index 54 diff: None:name&lt;"/ ~S :headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK != 157:name:headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK
  Use -v to get the full diff</message>
        <stack-trace>app = &lt;fixture.application.Application object at 0x03F42150&gt;
db = &lt;fixture.db.DbFixture object at 0x03F47430&gt;
json_groups = None:name&lt;"/ ~S :headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK
check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
        group = json_groups
        old_groups = db.get_group_list()
        app.group.create(group)
        new_groups = db.get_group_list()
        old_groups.append(group)
&gt;       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E       assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
E         At index 54 diff: None:name&lt;"/ ~S :headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK != 157:name:headerVR6;C&gt;Ocjk:footer &lt;_  q6?s]9 R_^ DK
E         Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387110516" status="passed" stop="1510387113286">
      <name>test_add_group[None:name ba:headerp4XA yK:footerSfEN]P (sCO ]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387113288" status="failed" stop="1510387116185">
      <name>test_add_group[None:nameac[:headerBx:r3Q K+ 20'  O:footerw&lt;_Y7IT.P41# OC0y7]</name>
      <failure>
        <message>AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
  Left contains more items, first extra item: None:nameac[:headerBx:r3Q K+ 20'  O:footerw&lt;_Y7IT.P41# OC0y7
  Use -v to get the full diff</message>
        <stack-trace>app = &lt;fixture.application.Application object at 0x03F42150&gt;
db = &lt;fixture.db.DbFixture object at 0x03F47430&gt;
json_groups = None:nameac[:headerBx:r3Q K+ 20'  O:footerw&lt;_Y7IT.P41# OC0y7
check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
        group = json_groups
        old_groups = db.get_group_list()
        app.group.create(group)
        new_groups = db.get_group_list()
        old_groups.append(group)
&gt;       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E       AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
E         Left contains more items, first extra item: None:nameac[:headerBx:r3Q K+ 20'  O:footerw&lt;_Y7IT.P41# OC0y7
E         Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387116186" status="failed" stop="1510387119153">
      <name>test_add_group[None:name_,C :header6ac 3s' ~%sRMn;:footerMK:y lzIz]V\\m{gm]</name>
      <failure>
        <message>AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
  Left contains more items, first extra item: None:name_,C :header6ac 3s' ~%sRMn;:footerMK:y lzIz]V\m{gm
  Use -v to get the full diff</message>
        <stack-trace>app = &lt;fixture.application.Application object at 0x03F42150&gt;
db = &lt;fixture.db.DbFixture object at 0x03F47430&gt;
json_groups = None:name_,C :header6ac 3s' ~%sRMn;:footerMK:y lzIz]V\m{gm
check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
        group = json_groups
        old_groups = db.get_group_list()
        app.group.create(group)
        new_groups = db.get_group_list()
        old_groups.append(group)
&gt;       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E       AssertionError: assert [97:name^F7GO...6H* G]#f, ...] == [97:name^F7GO`...6H* G]#f, ...]
E         Left contains more items, first extra item: None:name_,C :header6ac 3s' ~%sRMn;:footerMK:y lzIz]V\m{gm
E         Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1510387119156" status="passed" stop="1510387122239">
      <name>test_add_group[None:nameU (7PvX9::header{f:footer 9m6H* G]#f]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="15940-MainThread"/>
        <label name="host" value="VAIO"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
